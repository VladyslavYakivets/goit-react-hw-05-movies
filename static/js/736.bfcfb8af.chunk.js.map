{"version":3,"file":"static/js/736.bfcfb8af.chunk.js","mappings":"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","sources":["Api.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const api = async () => {\n  const URL = `https://api.themoviedb.org/3`;\n  const KEY = `731f4a410992078035fa504a629d03c1`;\n  const resolved = await fetch(`${URL}/trending/all/day?api_key=${KEY}&page=1`)\n    .then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return console.log(` Error ${res.status}`);\n    })\n    .then(responce => {\n      return responce.results;\n    })\n    .catch(error => console.log(`Error ${error.status}`));\n  return resolved;\n};\n// За ключовим словом\nexport const apiFilm = async filmName => {\n  const KEY = `731f4a410992078035fa504a629d03c1`;\n  const URL = `https://api.themoviedb.org/3`;\n  const resolved = await fetch(\n    `${URL}/search/movie?api_key=${KEY}&language=en-US&query=${filmName}&page=1`\n  )\n    .then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return console.log(` Error ${res.status}`);\n    })\n    .then(responce => {\n      return responce.results;\n    })\n    .catch(error => console.log(`Error ${error.status}`));\n  return resolved;\n};\n// За id\n\nexport const apiId = async filmId => {\n  const KEY = `731f4a410992078035fa504a629d03c1`;\n  const URL = `https://api.themoviedb.org/3`;\n  const resolved = await fetch(\n    `${URL}/movie/${filmId}?api_key=${KEY}&language=en-US`\n  )\n    .then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return console.log(` Error ${res.status}`);\n    })\n    .then(responce => {\n      return responce;\n    })\n    .catch(error => console.log(`Error ${error.status}`));\n  return resolved;\n};\n\n// Каст\n\nexport const apiCast = async filmId => {\n  const KEY = `731f4a410992078035fa504a629d03c1`;\n  const URL = `https://api.themoviedb.org/3`;\n  const resolved = await fetch(\n    `${URL}/movie/${filmId}/credits?api_key=${KEY}&language=en-US`\n  )\n    .then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return console.log(` Error ${res.status}`);\n    })\n    .then(responce => {\n      return responce.cast;\n    })\n    .catch(error => console.log(`Error ${error.status}`));\n  return resolved;\n};\n\n// Review\n\nexport const apiReview = async filmId => {\n  const KEY = `731f4a410992078035fa504a629d03c1`;\n  const URL = `https://api.themoviedb.org/3`;\n  const resolved = await fetch(\n    `${URL}/movie/${filmId}/reviews?api_key=${KEY}&language=en-US`\n  )\n    .then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return console.log(` Error ${res.status}`);\n    })\n    .then(responce => {\n      return responce.results;\n    })\n    .catch(error => console.log(`Error ${error.status}`));\n  return resolved;\n};\nexport default api;\n","import styled from '@emotion/styled';\n\nexport const CastImg = styled.img`\n  height: 200px;\n  width: 150px;\n`;\n\nexport const CastList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  width: 1260px;\n`;\nexport const ListItem = styled.li`\n  margin: 30px;\n`;\n","import { apiCast } from 'Api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastImg, CastList, ListItem } from './Cast.styled';\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [dataCast, setDataCast] = useState([]);\n  const imgURL = `https://image.tmdb.org/t/p/w500`;\n\n  useEffect(() => {\n    const fetchFilm = async () => {\n      try {\n        const responce = await apiCast(movieId);\n        setDataCast(responce);\n      } catch (error) {}\n    };\n    fetchFilm();\n  }, [movieId]);\n  return (\n    <CastList>\n      {dataCast.length > 1 ? (\n        dataCast.map(({ name, profile_path, id }) => {\n          return (\n            <ListItem key={id}>\n              <CastImg\n                src={profile_path ? `${imgURL}${profile_path}` : `Actor`}\n                alt=\"actor\"\n              />\n              <p>{name}</p>\n            </ListItem>\n          );\n        })\n      ) : (\n        <h3>Sorry,no info about cast</h3>\n      )}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["api","fetch","then","res","ok","json","console","log","status","responce","results","catch","error","resolved","apiFilm","filmName","apiId","filmId","apiCast","cast","apiReview","CastImg","styled","CastList","ListItem","movieId","useParams","useState","dataCast","setDataCast","useEffect","fetchFilm","length","map","name","profile_path","id","src","alt","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}